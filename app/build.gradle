apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.xiaomakj.hellogcc"
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

//方式一  external tool 手动生成
        ndk {
            moduleName "TestJniMethodsOne"//使用link C++ Gradle Project 之后 貌似没用了 abiFilters有用 这里的ndk会覆盖Android.mk的效果
            moduleName "TestJniMethodsTwo"//这玩意不加也能生成多个So库
            abiFilters "armeabi", "armeabi-v7a", "x86"
        }
        sourceSets.main {
            jni.srcDirs = []//禁用as自动生成mk
            jniLibs.srcDir "src/main/libs"
        }
    }
//方式四 link C++ Gradle Project  这个只有C++的提示
//方式五 cmake 这个有提示
//方式二  自动生成
    externalNativeBuild {
        ndkBuild {
            path 'src/main/jni/Android.mk'
        }
    }
//    sourceSets.main {
//        jni.srcDirs = ['src/main/jni']
//        jniLibs.srcDir "src/main/libs"
//    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
//     方式三  自动生成 ndk_build 但是javah需要手动
//    task ndkBuild(type: Exec, description: 'Compile JNI source via NDK') {
//        commandLine "D:\\android-ndk-r10e\\ndk-build.cmd",//配置ndk的路径
//                'NDK_PROJECT_PATH=build/intermediates/ndk',//ndk默认的生成so的文件
//                'NDK_LIBS_OUT=src/main/jniLibs',//配置的我们想要生成的so文件所在的位置
//                'APP_BUILD_SCRIPT=src/main/jni/Android.mk',//指定项目以这个mk的方式
//                'NDK_APPLOCATION_MK=src/main/jni/Application.mk'//指定项目以这个mk的方式
//    }
//    tasks.withType(JavaCompile) {
//            //使用ndkBuild
//        compileTask -> compileTask.dependsOn ndkBuild
//    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
